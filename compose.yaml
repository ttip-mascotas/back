version: "3.8"
services:
  api:
    build:
      context: .
      dockerfile: Containerfile
    environment:
      - SPRING_SERVER_PORT=${SPRING_SERVER_PORT}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/pets_history
      - MINIO_USERNAME=${MINIO_USERNAME}
      - MINIO_PASSWORD=${MINIO_PASSWORD}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PUBLIC_BUCKET=${MINIO_PUBLIC_BUCKET}
    ports:
      - "${SPRING_SERVER_PORT}:${SPRING_SERVER_PORT}"
    depends_on:
      minio:
        condition: service_healthy
      db:
        condition: service_healthy
    profiles:
      - backend

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    command: server --console-address ":${MINIO_WEBUI_PORT}" /data
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_USERNAME}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_WEBUI_PORT}:${MINIO_WEBUI_PORT}"
    volumes:
      - minio-data:/data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - backend
      - storage

  minio-buckets:
    image: minio/mc:RELEASE.2024-04-18T16-45-29Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio ${MINIO_HOST} ${MINIO_USERNAME} ${MINIO_PASSWORD};
      /usr/bin/mc rm -r --force minio/public/;
      /usr/bin/mc mb minio/public;
      /usr/bin/mc anonymous set download minio/public;
      exit 0;
      "
    profiles:
      - backend
      - storage

  db:
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/01_init_db.sh
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - backend
      - storage

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pets.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    profiles:
      - backend
      - storage

volumes:
  minio-data:
  postgres-data:
  pgadmin-data:
